<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2017, 2018 Oracle and/or its affiliates. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon</groupId>
        <artifactId>helidon-project</artifactId>
        <version>0.11.0-SNAPSHOT</version>
    </parent>
    <groupId>io.helidon.examples</groupId>
    <artifactId>helidon-examples-project</artifactId>
    <name>Helidon Examples</name>
    <packaging>pom</packaging>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        <maven.sources.skip>true</maven.sources.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <spotbugs.skip>true</spotbugs.skip>
    </properties>

    <modules>
        <module>helidon-quickstart-se</module>
        <module>helidon-quickstart-mp</module>
        <module>todos</module>
        <module>guides</module>
    </modules>

    <profiles>
        <profile>
            <id>integrations</id>
            <modules>
                <module>integrations/cdi</module>
            </modules>
        </profile>
        <profile>
            <!--
                Developers use this profile with the generate-sources phase to convert
                the README.adoc file at the top-level of the project into the
                pre-included format so it will render nicely on GitHub.

                Usage:
                    mvn -Padoc-preinclude generate-sources
            -->
            <id>adoc-preinclude</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.helidon.build-tools</groupId>
                            <artifactId>sitegen-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>preinclude-adoc</id>
                                    <configuration>
                                        <includes>
                                            <include>README.adoc</include>
                                        </includes>
                                    </configuration>
                                    <goals>
                                        <goal>preprocess-adoc</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <!--
                Developers use this profile with the generate-sources phase to convert
                the README.adoc file at the top-level of the project into the
                natural format so it uses the familiar AsciiDoc include:: syntax
                rather than the pre-included syntax created by the adoc-preinclude profile.

                Usage:
                    mvn -Padoc-naturalize generate-sources
            -->
            <id>adoc-naturalize</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.helidon.build-tools</groupId>
                            <artifactId>sitegen-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>naturalize-adoc</id>
                                    <configuration>
                                        <outputType>natural</outputType>
                                        <includes>
                                            <include>README.adoc</include>
                                        </includes>
                                    </configuration>
                                    <goals>
                                        <goal>preprocess-adoc</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <!--
                Pipeline builds use this profile with the generate-sources phase to convert
                the README.adoc file at the top-level of the project into the
                pre-included format but store it in a different location, then compare
                the two to make sure they match. If they do not match, then the
                developer has probably updated the content but forgot to run
                adoc-preinclude to make the file more GitHub-friendly.

                Usage:
                    mvn -Padoc-check generate-sources
            -->
            <id>adoc-check</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.helidon.build-tools</groupId>
                            <artifactId>sitegen-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>check-adoc</id>
                                    <configuration>
                                        <includes>
                                            <include>README.adoc</include>
                                        </includes>
                                        <outputDirectory>${project.build.directory}/tmp/adoc</outputDirectory>
                                        <check>true</check>
                                    </configuration>
                                    <goals>
                                        <goal>preprocess-adoc</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
