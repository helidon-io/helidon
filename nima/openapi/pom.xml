<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2022, 2023 Oracle and/or its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.helidon.nima</groupId>
        <artifactId>helidon-nima-project</artifactId>
        <version>4.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.helidon.nima.openapi</groupId>
    <artifactId>helidon-nima-openapi</artifactId>
    <name>Helidon Nima OpenAPI</name>
    <description>Integration of OpenAPI with NÃ­ma webserver</description>

    <properties>
        <spotbugs.exclude>etc/spotbugs/exclude.xml</spotbugs.exclude>
        <openapi-interfaces-dir>${project.build.directory}/extracted-sources/openapi-interfaces</openapi-interfaces-dir>
        <openapi-impls-dir>${project.build.directory}/extracted-sources/openapi-impls</openapi-impls-dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.openapi</groupId>
            <artifactId>helidon-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>smallrye-open-api-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.nima.webserver</groupId>
            <artifactId>helidon-nima-webserver</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.nima.http.media</groupId>
            <artifactId>helidon-nima-http-media-jsonp</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-metadata</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-metadata-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.helidon.common.features</groupId>
            <artifactId>helidon-common-features-api</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-yaml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.nima.service-common</groupId>
            <artifactId>helidon-nima-service-common</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<!-- Keep the comment block below; it might return, possibly in modified form, once SE OpenAPI support returns. -->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>unpack-openapi-interfaces</id>-->
<!--                        <goals>-->
<!--                            <goal>unpack-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <configuration>-->
<!--                            <classifier>sources</classifier>-->
<!--                            <failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>-->
<!--                            <outputDirectory>${openapi-interfaces-dir}</outputDirectory>-->
<!--                            <includeGroupIds>org.eclipse.microprofile.openapi</includeGroupIds>-->
<!--                            <includeArtifactIds>microprofile-openapi-api</includeArtifactIds>-->
<!--                            <includes>org/eclipse/microprofile/openapi/models/**/*.java</includes>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>unpack-openapi-impls</id>-->
<!--                        <goals>-->
<!--                            <goal>unpack-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <configuration>-->
<!--                            <classifier>sources</classifier>-->
<!--                            <failOnMissingClassifierArtifact>true</failOnMissingClassifierArtifact>-->
<!--                            <outputDirectory>${openapi-impls-dir}</outputDirectory>-->
<!--                            <includeGroupIds>io.smallrye</includeGroupIds>-->
<!--                            <includeArtifactIds>smallrye-open-api-core</includeArtifactIds>-->
<!--                            <includes>io/smallrye/openapi/api/models/**/*.java</includes>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>io.helidon.build-tools</groupId>-->
<!--                <artifactId>snakeyaml-codegen-maven-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>generate-snakeyaml-parsing-helper</id>-->
<!--                        <goals>-->
<!--                            <goal>generate</goal>-->
<!--                        </goals>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <configuration>-->
<!--                            <outputClass>io.helidon.openapi.SnakeYAMLParserHelper</outputClass>-->
<!--                            <interfacesConfig>-->
<!--                                <inputDirectory>${openapi-interfaces-dir}</inputDirectory>-->
<!--                            </interfacesConfig>-->
<!--                            <implementationsConfig>-->
<!--                                <inputDirectory>${openapi-impls-dir}</inputDirectory>-->
<!--                            </implementationsConfig>-->
<!--                            <implementationPrefix>io.smallrye</implementationPrefix>-->
<!--                            <interfacePrefix>org.eclipse.microprofile.openapi</interfacePrefix>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Allows test client to set restricted headers Origin and Host -->
                    <systemPropertyVariables>
                        <sun.net.http.allowRestrictedHeaders>true</sun.net.http.allowRestrictedHeaders>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.helidon.common.features</groupId>
                            <artifactId>helidon-common-features-processor</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
