<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2020 Oracle and/or its affiliates.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>2.3.0-SNAPSHOT</version>
        <relativePath>../../../../applications/mp/pom.xml</relativePath>
    </parent>

    <groupId>io.helidon.tests.integration.jpa</groupId>
    <artifactId>helidon-tests-integration-jpa-appl</artifactId>
    <name>Integration Tests: JPA MP Application</name>

    <properties>
        <mainClass>io.helidon.microprofile.cdi.Main</mainClass>
        <mainClassH2>org.h2.tools.Server</mainClassH2>
        <version.plugin.docker-maven-plugin>0.34.1</version.plugin.docker-maven-plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.tests.integration.jpa</groupId>
            <artifactId>helidon-tests-integration-jpa-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.server</groupId>
            <artifactId>helidon-microprofile-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.config</groupId>
            <artifactId>helidon-microprofile-config</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-hibernate</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jta</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-delegates</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.integrations.cdi</groupId>
            <artifactId>helidon-integrations-cdi-jpa</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-transaction-spi</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>META-INF/microprofile-config.properties</exclude>
                    <exclude>META-INF/persistence.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources/META-INF</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>microprofile-config.properties</include>
                    <include>persistence.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.plugin.docker-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Generate persistence.xml Java objects</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatePackage>io.helidon.tests.integration.nativeimage.mp2.jaxb</generatePackage>
                            <markGenerated>true</markGenerated>
                            <schemas>
                                <schema>
                                    <dependencyResource>
                                        <groupId>jakarta.persistence</groupId>
                                        <artifactId>jakarta.persistence-api</artifactId>
                                        <resource>javax/persistence/persistence_2_2.xsd</resource>
                                    </dependencyResource>
                                </schema>
                            </schemas>
                            <strict>false</strict>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <configuration>
                            <failOnError>true</failOnError>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                        </configuration>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.plugin.jar}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs</classpathPrefix>
                            <mainClass>${mainClass}</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <parallel>methods</parallel>
                    <threadCount>10</threadCount>
                    <systemPropertyVariables>
                        <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>io.helidon.tests.integration.jpa.appl.test.*IT</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <activation>
                <property>
                    <name>!native-image</name>
                </property>
            </activation>
            <id>java-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>app</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath />
                                        <argument>${mainClass}</argument>
                                    </arguments>
                                    <async>true</async>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <activation>
                <property>
                    <name>native-image</name>
                </property>
            </activation>
            <id>native-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>app</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.build.directory}/${project.artifactId}</executable>
                                    <async>true</async>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                   
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>h2</id>
            <activation>
                <property>
                    <name>h2</name>
                </property>
            </activation>
            <properties>
                <db.port>9092</db.port>
                <db.host>localhost</db.host>
                <db.database>pokemon</db.database>
                <db.user>sa</db.user>
                <db.password></db.password>
                <db.roootpw>root</db.roootpw>
                <db.url>jdbc:h2:tcp://${db.host}:${db.port}/test</db.url>
                <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
                <db.datasource>org.h2.jdbcx.JdbcDataSource</db.datasource>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.db</groupId>
                    <artifactId>h2</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <db.user>${db.user}</db.user>
                                <db.password>${db.password}</db.password>
                                <db.url>${db.url}</db.url>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-db</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <argument>${project.build.directory}/libs/h2-${version.lib.h2}.jar</argument>
                                        <argument>${mainClassH2}</argument>
                                        <argument>-tcp</argument>
                                        <argument>-tcpPassword</argument>
                                        <argument>${h2.db.password}</argument>
                                        <argument>-tcpPort</argument>
                                        <argument>${h2.db.port}</argument>
                                        <argument>-baseDir</argument>
                                        <argument>${project.build.directory}/h2</argument>
                                        <argument>-ifNotExists</argument>
                                    </arguments>
                                    <async>true</async>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-db</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <argument>${project.build.directory}/libs/h2-${version.lib.h2}.jar</argument>
                                        <argument>${mainClassH2}</argument>
                                        <argument>-tcpShutdown</argument>
                                        <argument>tcp://localhost:${h2.db.port}</argument>
                                        <argument>-tcpPassword</argument>
                                        <argument>${h2.db.password}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mysql</id>
            <activation>
                <property>
                    <name>mysql</name>
                </property>
            </activation>
            <properties>
                <db.port>3306</db.port>
                <db.host>127.0.0.1</db.host>
                <db.database>pokemon</db.database>
                <db.args>useSSL=false&amp;allowPublicKeyRetrieval=true</db.args>
                <db.user>user</db.user>
                <db.password>password</db.password>
                <db.roootpw>root</db.roootpw>
                <db.url>jdbc:mysql://${db.host}:${db.port}/${db.database}?${db.args}</db.url>
                <hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</hibernate.dialect>
                <db.datasource>com.mysql.cj.jdbc.MysqlDataSource</db.datasource>
                <db.driver>com.mysql.cj.jdbc.Driver</db.driver>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.db</groupId>
                    <artifactId>helidon-integrations-db-mysql</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <db.user>${db.user}</db.user>
                                <db.password>${db.password}</db.password>
                                <db.url>${db.url}</db.url>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>mysql:8</name>
                                    <alias>mysql</alias>
                                    <run>
                                        <env>
                                            <MYSQL_USER>${db.user}</MYSQL_USER>
                                            <MYSQL_PASSWORD>${db.password}</MYSQL_PASSWORD>
                                            <MYSQL_ROOT_PASSWORD>${db.roootpw}</MYSQL_ROOT_PASSWORD>
                                            <MYSQL_DATABASE>${db.database}</MYSQL_DATABASE>
                                        </env>
                                        <hostname>${db.host}</hostname>
                                        <ports>
                                            <port>${db.host}:${db.port}:3306</port>
                                        </ports>
                                        <wait>
                                            <tcp>
                                                <host>127.0.0.1</host>
                                                <ports>
                                                    <port>${db.port}</port>
                                                </ports>
                                            </tcp>
                                            <time>120000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                            <showLogs>true</showLogs>
                            <startParallel>false</startParallel>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pgsql</id>
            <activation>
                <property>
                    <name>pgsql</name>
                </property>
            </activation>
            <properties>
                <db.port>5432</db.port>
                <db.host>127.0.0.1</db.host>
                <db.database>pokemon</db.database>
                <db.user>user</db.user>
                <db.password>password</db.password>
                <db.url>jdbc:postgresql://${db.host}:${db.port}/${db.database}</db.url>
                <hibernate.dialect>org.hibernate.dialect.PostgreSQL10Dialect</hibernate.dialect>
                <db.datasource>org.postgresql.jdbc3.Jdbc3PoolingDataSource</db.datasource>
                <db.driver>org.postgresql.Driver</db.driver>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.db</groupId>
                    <artifactId>helidon-integrations-db-pgsql</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <db.user>${db.user}</db.user>
                                <db.password>${db.password}</db.password>
                                <db.url>${db.url}</db.url>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                   <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>postgres</name>
                                    <alias>postgres</alias>
                                    <run>
                                        <env>
                                            <POSTGRES_USER>${db.user}</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                                            <POSTGRES_DB>${db.database}</POSTGRES_DB>
                                        </env>
                                        <hostname>${db.host}</hostname>
                                        <ports>
                                            <port>${db.host}:${db.port}:5432</port>
                                        </ports>
                                        <wait>
                                            <tcp>
                                                <host>127.0.0.1</host>
                                                <ports>
                                                    <port>${db.port}</port>
                                                </ports>
                                            </tcp>
                                            <time>120000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                            <showLogs>true</showLogs>
                            <startParallel>false</startParallel>
                        </configuration>
                   </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
