<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2019 Oracle and/or its affiliates. All rights reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>2.0-SNAPSHOT</version>
        <relativePath>../../../../applications/mp/pom.xml</relativePath>
    </parent>
    <groupId>io.helidon.tests.integration</groupId>
    <artifactId>helidon-tests-native-image-mp-1</artifactId>
    <name>Helidon Integration Tests GraalVM Native image MP1</name>

    <description>
        This test makes sure the following helidon modules can be compiled into native image:
        - Microprofile CDI
        - Microprofile Server
        - Microprofile Tracing
            - Jaeger Tracer
        - Microprofile Access Log
        - Microprofile Fault Tolerance
        - Microprofile Metrics
        - Microprofile Health Check
        - Microprofile Rest Client
        - Microprofile Config
            - YAML configuration
        - JSON-P
        - JSON-B
    </description>

    <properties>
        <mainClass>io.helidon.tests.integration.nativeimage.mp1.Mp1Main</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.helidon.microprofile.server</groupId>
            <artifactId>helidon-microprofile-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.tracing</groupId>
            <artifactId>helidon-microprofile-tracing</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.tracing</groupId>
            <artifactId>helidon-tracing-jaeger</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile</groupId>
            <artifactId>helidon-microprofile-access-log</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile</groupId>
            <artifactId>helidon-microprofile-fault-tolerance</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.metrics</groupId>
            <artifactId>helidon-microprofile-metrics</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.health</groupId>
            <artifactId>helidon-microprofile-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.rest-client</groupId>
            <artifactId>helidon-microprofile-rest-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.config</groupId>
            <artifactId>helidon-config-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.config</groupId>
            <artifactId>helidon-microprofile-config</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>io.helidon.config</groupId>
                    <artifactId>helidon-config-object-mapping</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.helidon.common</groupId>
            <artifactId>helidon-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jandex</artifactId>
            <version>2.1.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native-image</id>
            <activation>
                <file>
                    <exists>${native.image}</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <executable>${native.image}</executable>
                                    <arguments>
                                        <argument>-cp</argument>
                                        <classpath/>
                                        <argument>--report-unsupported-elements-at-runtime</argument>
<!--                                        <argument>-H:-ReportUnsupportedElementsAtRuntime</argument>-->
                                        <!--                                        &lt;!&ndash;-->
                                        <!--                                        <argument>-J-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y</argument>-->
                                        <!--                                        &ndash;&gt;-->
                                        <!--                                        <argument>-J-XX:+UnlockCommercialFeatures</argument>-->
                                        <!--                                        <argument>-J-XX:+FlightRecorder</argument>-->
                                        <!--                                        <argument>-J-XX:StartFlightRecording=duration=600s,filename=native-image.jfr</argument>-->
                                        <argument>-H:Name=${project.build.directory}/native-image</argument>

                                        <!-- Debugging native image options -->
                                        <!--                                        <argument>-H:Debug=2</argument>-->
                                        <!--                                        <argument>-H:Optimize=0</argument>-->
                                        <!--                                        <argument>-g</argument>-->
                                        <!-- /Debugging native image options -->

                                        <argument>--no-server</argument>
                                        <!--                                        -->
                                        <!--                                        <argument>-H:IncludeResources=logging.properties</argument>-->
                                        <!--                                        <argument>-H:IncludeResources=application.yaml</argument>-->
                                        <!--<argument>-H:Log=registerResource</argument>-->
                                        <argument>-H:+ReportExceptionStackTraces</argument>
                                        <!-- <argument>-H:+TraceServiceLoaderFeature</argument> -->
                                        <!--                                        <argument>-H:+PrintAnalysisCallTree</argument>-->
                                        <argument>${mainClass}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>io.helidon.integrations.graal</groupId>
                    <artifactId>helidon-mp-graal-native-image-extension</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
