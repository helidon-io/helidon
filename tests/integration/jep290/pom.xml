<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2019, 2023 Oracle and/or its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.tests.integration</groupId>
        <artifactId>helidon-tests-integration</artifactId>
        <version>3.2.3-SNAPSHOT</version>
    </parent>
    <groupId>io.helidon.tests.integration.jep290</groupId>
    <artifactId>helidon-tests-integration-jep290-project</artifactId>
    <packaging>pom</packaging>
    <name>Helidon Tests Integration JEP-290</name>

    <description>
        A set of tests that validate deserialization filtering
    </description>

    <!--
    The modules are named according to what they test.
    First there is a set of tests that make sure the filter is configured by us (correctly):
        Directory pattern: set_<onNoConfig>_<ignoreFiles>_<filterPattern>

    onNoConfig:
        fail: f
        configure: c
        other: o
    ignoreFiles:
        true: t
        false: f
    filterPattern:
        default: d
        custom: c

    Second there is a set of tests that make sure the existing filter is validated:
        Directory pattern: check_<onWrongConfig>_type_result

    onWrongConfig:
        fail: f
        configure: c // not yet supported, maybe can work with JDK 17 and its combined filters?
                    https://openjdk.java.net/jeps/415

    type:
        pattern: p (pattern config using system property)
        filter: f (programmatic config)

    result:
        wrong: w (the existing configuration is wrong)
        ok: ok

    -->
    <modules>
        <module>check_f_f_ok</module>
        <module>check_f_f_w</module>
        <module>check_f_p_ok</module>
        <module>check_f_p_w</module>
        <module>set_c_f_d</module>
        <module>set_c_t_d</module>
        <module>set_c_f_c</module>
        <module>set_f</module>
        <module>set_o</module>
        <module>server_and_custom</module>
    </modules>
</project>
