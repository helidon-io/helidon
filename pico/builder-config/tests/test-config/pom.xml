<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 Oracle and/or its affiliates.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.helidon.pico.config</groupId>
        <artifactId>helidon-pico-config-project</artifactId>
        <version>4.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>helidon-pico-config-test-config</artifactId>
    <name>Helidon Pico Config : Tests</name>

    <properties>
        <!--        <maven.deploy.skip>true</maven.deploy.skip>-->
        <!--        <maven.sources.skip>true</maven.sources.skip>-->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <!--                <spotbugs.skip>true</spotbugs.skip>-->
        <!--        <dependency-check.skip>true</dependency-check.skip>-->
        <helidon.services.skip>true</helidon.services.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico.builder</groupId>
            <artifactId>helidon-pico-builder-api</artifactId>
            <version>${helidon.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico</artifactId>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico.config</groupId>
            <artifactId>helidon-pico-config-services</artifactId>
            <version>${helidon.version}</version>
        </dependency>
        <!-- note to self: ideally api should not be needed, and should come in transitively -->
        <dependency>
            <groupId>io.helidon.pico.config</groupId>
            <artifactId>helidon-pico-config-api</artifactId>
            <version>${helidon.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-test-support</artifactId>
            <scope>test</scope>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-XprintProcessorInfo</arg>
                        <arg>-XprintRounds</arg>
                        <arg>-verbose</arg>
                    </compilerArgs>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.helidon.pico.config</groupId>
                            <artifactId>helidon-pico-config-processor</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <!-- the rest of these dependencies should have come in transitively, but they are not - need to investigate why -->
                        <path>
                            <groupId>io.helidon.pico</groupId>
                            <artifactId>helidon-pico-processor</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <path>
                            <groupId>io.helidon.pico.builder</groupId>
                            <artifactId>helidon-pico-builder-processor</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <path>
                            <groupId>io.helidon.pico.config</groupId>
                            <artifactId>helidon-pico-config-api</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <path>
                            <groupId>io.helidon.pico</groupId>
                            <artifactId>helidon-pico-api</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
