<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2022 Oracle and/or its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.helidon.pico</groupId>
        <artifactId>helidon-pico-project</artifactId>
        <version>4.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>helidon-pico-test-pico</artifactId>
    <name>Helidon Pico Tests</name>

    <properties>
        <checkstyle.skip>true</checkstyle.skip>
        <!-- xTODO until all is module-info compliant -->
        <helidon.services.skip>true</helidon.services.skip>
    </properties>

    <dependencies>
<!--        <dependency>-->
<!--            <groupId>jakarta.inject</groupId>-->
<!--            <artifactId>jakarta.inject-tck</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico</artifactId>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico</artifactId>
            <version>${helidon.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-test-resources</artifactId>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-test-resources</artifactId>
            <version>${helidon.version}</version>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-test-support</artifactId>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-test-extended-resources</artifactId>
            <version>${helidon.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-processor</artifactId>
            <scope>compile</scope>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.pico</groupId>
            <artifactId>helidon-pico-tools</artifactId>
            <scope>compile</scope>
            <!-- remove me -->
            <version>${helidon.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>${version.lib.jakarta.cdi-api}</version>
            <scope>test</scope>
        </dependency>
        <!-- for @JsonIgnore use only -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-Aio.helidon.pico.debugAnnoProcessor=true</arg>
                        <arg>-Aio.helidon.pico.autoAddNonContractInterfaces=true</arg>
                        <arg>-Aio.helidon.pico.whiteListedInterceptorAnnotations=jakarta.inject.Named</arg>
                        <arg>-Aio.helidon.pico.application.pre.create=true</arg>
                        <arg>-Aio.helidon.pico.mapApplicationToSingletonScope=true</arg>
                        <arg>-XprintProcessorInfo</arg>
                        <arg>-XprintRounds</arg>
                        <arg>-verbose</arg>
                    </compilerArgs>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.helidon.pico</groupId>
                            <artifactId>helidon-pico-processor</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <path>
                            <groupId>io.helidon.pico</groupId>
                            <artifactId>helidon-pico-test-extended-resources</artifactId>
                            <version>${helidon.version}</version>
                        </path>
                        <path>
                            <groupId>jakarta.enterprise</groupId>
                            <artifactId>jakarta.enterprise.cdi-api</artifactId>
                            <version>${version.lib.jakarta.cdi-api}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.helidon.pico</groupId>
                <artifactId>helidon-pico-maven-plugin</artifactId>
                <version>${helidon.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>application-create</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-application-create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <compilerArgs>
                        <arg>-Aio.helidon.pico.debugAnnoProcessor=true</arg>
                        <arg>-Aio.helidon.pico.autoAddNonContractInterfaces=true</arg>
                        <arg>-Aio.helidon.pico.application.pre.create=true</arg>
                        <arg>-XprintProcessorInfo</arg>
                        <arg>-XprintRounds</arg>
                        <arg>-verbose</arg>
                    </compilerArgs>
                    <permittedProviderTypes>NAMED</permittedProviderTypes>
                    <permittedProviderTypeNames>
                        <permittedProviderTypeName>io.helidon.pico.testsubjects.ext.provider.MyServices$MyConcreteClassContractPerRequestIPProvider</permittedProviderTypeName>
                        <permittedProviderTypeName>io.helidon.pico.testsubjects.ext.provider.MyServices$MyConcreteClassContractPerRequestProvider</permittedProviderTypeName>
                        <permittedProviderTypeName>io.helidon.pico.testsubjects.ext.tbox.impl.ASerialProviderImpl</permittedProviderTypeName>
                        <permittedProviderTypeName>io.helidon.pico.testsubjects.ext.tbox.impl.BladeProvider</permittedProviderTypeName>
                    </permittedProviderTypeNames>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
