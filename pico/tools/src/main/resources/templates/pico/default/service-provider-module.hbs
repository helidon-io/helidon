{{!

    Copyright (c) 2023 Oracle and/or its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

}}/**
* {{#header}}{{.}}
* {{/header}}
*/
package {{packagename}};

import io.helidon.pico.Module;
import io.helidon.pico.ServiceBinder;

import jakarta.annotation.Generated;
import jakarta.inject.Named;
import jakarta.inject.Singleton;
import java.util.Optional;

/**
 * {{#description}}{{.}}
 * {{/description}}
 */
@Generated({{{generatedanno}}})
@Singleton {{#modulename}}@Named({{classname}}.NAME){{/modulename}}
public class {{classname}} implements Module {
{{#modulename}}
    static final String NAME = "{{{.}}}";
{{/modulename}}{{^modulename}}
    static final String NAME = "unnamed";{{/modulename}}

    @Override
    public Optional<String> named() {
        return Optional.of(NAME);
    }

    @Override
    public String toString() {
        return NAME + ":" + getClass().getName();
    }

    @Override
    public void configure(ServiceBinder binder) {
{{#activators}}        binder.bind({{{.}}}.INSTANCE);
{{/activators}}
    }

}
