#
# Copyright (c) 2024 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'Common Job Steps'
description: A composite action that abstracts the common steps needed to implement a job
inputs:
  native-image:
    description: Whether to setup GraalVM native-image
    required: false
    default: 'false'
  maven-cache:
    description: Whether to cache the Maven local repository (read-only or read-write)
    required: false
    default: 'read-only'
  build-cache:
    description:  Whether to cache the Maven build (read-only or read-write)
    required: false
    default: ''
  build-cache-id:
    description:  Build cache id
    required: false
    default: 'default'
  run:
    description: The bash command to run
    required: true
  artifact-name:
    description: Name of the artifact to create
    required: false
    default: ''
  artifact-path:
    description: Path of the files to include in the artifact
    required: false
    default: ''
  test-artifact-name:
    description: Name of the test artifact to create (excluded on windows), if non empty tests are archived
    required: false
    default: ''
  free-space:
    description: Whether to aggressively free disk space on the runner
    default: 'false'
runs:
  using: "composite"
  steps:
    - if: ${{ inputs.free-space == 'true' }}
      # See https://github.com/actions/runner-images/issues/2840
      name: Free disk space
      shell: bash
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/share/powershell
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: Set up GraalVM
      if: ${{ inputs.native-image == 'true' }}
      uses: graalvm/setup-graalvm@v1.2.4
      with:
        java-version: ${{ env.GRAALVM_VERSION || env.JAVA_VERSION }}
        components: ${{ env.GRAALVM_COMPONENTS }}
        check-for-updates: 'false'
        set-java-home: 'false'
    - name: Set up JDK
      uses: actions/setup-java@v4.1.0
      with:
        distribution: ${{ env.JAVA_DISTRO }}
        java-version: ${{ env.JAVA_VERSION }}
    - name: Cache local Maven repository (read-write)
      if: ${{ inputs.maven-cache == 'read-write' }}
      uses: actions/cache@v4.0.2
      with:
        # See https://github.com/actions/toolkit/issues/713
        # Include must not match top level directories
        path: |
          .m2/repository/**/*.*
          !.m2/repository/io/helidon/**
        enableCrossOsArchive: true
        # only hash top-level poms to keep it fast
        key: local-maven-${{ hashFiles('*/pom.xml', 'pom.xml') }}
        restore-keys: |
          local-maven-
    - name: Cache local Maven repository (read-only)
      if: ${{ inputs.maven-cache == 'read-only' }}
      uses: actions/cache/restore@v4.0.2
      with:
        path: |
          .m2/repository/**/*.*
          !.m2/repository/io/helidon/**
        enableCrossOsArchive: true
        key: local-maven-${{ hashFiles('*/pom.xml', 'pom.xml') }}
        restore-keys: |
          local-maven-
    - name: Build cache (read-write)
      if: ${{ inputs.build-cache == 'read-write' }}
      uses: actions/cache@v4.0.2
      with:
        path: |
          ./**/target/**
          .m2/repository/io/helidon/**
        enableCrossOsArchive: true
        key: build-cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ inputs.build-cache-id }}
        restore-keys: |
          build-cache-${{ github.run_id }}-${{ github.run_attempt }}-
          build-cache-${{ github.run_id }}-
    - name: Build cache (read-only)
      if: ${{ inputs.build-cache == 'read-only' }}
      uses: actions/cache/restore@v4.0.2
      with:
        path: |
          ./**/target/**
          .m2/repository/io/helidon/**
        enableCrossOsArchive: true
        fail-on-cache-miss: true
        key: build-cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ inputs.build-cache-id }}
        restore-keys: |
          build-cache-${{ github.run_id }}-${{ github.run_attempt }}-
          build-cache-${{ github.run_id }}-
    - name: Exec
      env:
        MAVEN_ARGS: |
          ${{ env.MAVEN_ARGS }}
          -Dmaven.repo.local=${{ github.workspace }}/.m2/repository
      run: ${{ inputs.run }}
      shell: bash
    - name: Archive test results
      # https://github.com/actions/upload-artifact/issues/240
      if: ${{ inputs.test-artifact-name != '' && runner.os != 'Windows' && always() }}
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: 'ignore'
        name: ${{ inputs.test-artifact-name }}
        path: |
          **/target/surefire-reports/**
          **/target/failsafe-reports/**
          **/target/it/**/*.log
    - name: Archive artifacts
      if: ${{ inputs.artifact-name != '' && inputs.artifact-path != ''  && always() }}
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: 'ignore'
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.artifact-path }}
