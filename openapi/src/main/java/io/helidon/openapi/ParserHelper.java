/*
 * Copyright (c) 2022 Oracle and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.helidon.openapi;

import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;

import org.yaml.snakeyaml.TypeDescription;

/**
 * Wraps generated parser.
 *
 * @param <T> supported type
 */
public class ParserHelper<T extends TypeDescription> {
    /**
     * The SnakeYAMLParserHelper is generated by a maven plug-in.
     */
    private final SnakeYAMLParserHelper<T> generatedHelper;

    private ParserHelper(SnakeYAMLParserHelper<T> generatedHelper) {
        this.generatedHelper = generatedHelper;
    }

    /**
     * Create a new parser helper.
     *
     * @param factoryFunction function to create a type description
     * @return a new parser helper
     * @param <T> type of the description in use
     */
    public static <T extends TypeDescription> ParserHelper<T> create(BiFunction<Class<?>, Class<?>, T> factoryFunction) {
        return new ParserHelper<>(SnakeYAMLParserHelper.<T>create(factoryFunction));
    }

    /**
     * Types.
     *
     * @return types of this helper
     */
    public Map<Class<?>, T> types() {
        return generatedHelper.types();
    }

    /**
     * Entries of this helper.
     *
     * @return entry set
     */
    public Set<Map.Entry<Class<?>, T>> entrySet() {
        return generatedHelper.entrySet();
    }
}
