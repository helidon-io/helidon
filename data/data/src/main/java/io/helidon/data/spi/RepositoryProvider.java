/*
 * Copyright (c) 2025 Oracle and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.helidon.data.spi;

import io.helidon.service.inject.api.Injection;
import io.helidon.service.registry.Service;

/**
 * Data repository provider.
 * <p>
 * This is a service registry contract. Implementation are code generated by each support, to correctly
 * provide metadata of the repository, and to instantiate it.
 *
 * @param <T> type of the repository this provider supports
 */
@Service.Contract
public interface RepositoryProvider<T> {
    /**
     * Persistence entity class.
     *
     * @return type of the entity matching {@link io.helidon.data.api.Data.GenericRepository} generic type {@code E}
     */
    Class<?> entityClass();

    /**
     * Data repository interface class.
     *
     * @return interface class being implemented
     */
    Class<T> type();

    /**
     * Get a repository instance.
     *
     * @return a repository instance
     */
    T get();

    /**
     * Name of the data source. Defaults to {@value io.helidon.service.inject.api.Injection.Named#DEFAULT_NAME}.
     *
     * @return name of the data source
     */
    default String dataSourceName() {
        return Injection.Named.DEFAULT_NAME;
    }

    /**
     * Type of the data support provider, such as {@code jakarta}.
     *
     * @return type of data support that handles this repository
     */
    String dataSupportType();
}
