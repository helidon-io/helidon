<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
<!-- For information see https://jeremylong.github.io/DependencyCheck/general/suppression.html -->

<!-- This CVE is against the etcd server. We ship a Java client -->
<suppress>
   <notes><![CDATA[
   file name: etcd4j-2.17.0.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.mousio/etcd4j@.*$</packageUrl>
   <cpe>cpe:/a:etcd:etcd</cpe>
</suppress>

<!-- This CVE is against Neo4j through 3.4.18. We use Neo4j 4.x
     Helidon's Neo4j integration triggered a false positive due to it's 
     version being < 3.4.18
-->
<suppress>
   <notes><![CDATA[
   file name: io.helidon.integrations.neo4j:helidon-integrations-neo4j:2.4.0-SNAPSHOT
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/io\.helidon\.integrations\.neo4j/helidon\-integrations\-neo4j@.*$</packageUrl>
   <cve>CVE-2021-34371</cve>
</suppress>

<!-- This CVE is against micronaut's Content Type header parsing. We never use micronaut classes
     to parse the Content Type header. So this is N/A in our use of micronaut (for micronaut data).
-->
<suppress>
   <notes><![CDATA[
   file name: micronaut-core-3.5.13.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/io\.micronaut/micronaut\-core@.*$</packageUrl>
   <vulnerabilityName>CVE-2022-21700</vulnerabilityName>
</suppress>

<!-- okhttp is a transitive fourth party dependency of Jaeger client. This CVE is considered
     by the okhttp team as not exploitable unless the class in question is used
     directly by an application (highly unlikely). See https://github.com/square/okhttp/issues/6724
     They have only fixed this in 4.9.3 and newer. We can't force upgrade due to a tangle of
     dependencies, compatibility, and issues with dependency convergence.
-->
<suppress>
   <notes><![CDATA[
   file name: okhttp-3.14.9.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/com\.squareup\.okhttp3/okhttp@.*$</packageUrl>
   <vulnerabilityName>CVE-2021-0341</vulnerabilityName>
</suppress>

<!-- False Positive. This CVE is against graphql-java, not the microprofile-graphql-api
-->
<suppress>
   <notes><![CDATA[
   file name: microprofile-graphql-api-1.1.0.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/org\.eclipse\.microprofile\.graphql/microprofile\-graphql\-api@.*$</packageUrl>
   <cve>CVE-2022-37734</cve>
</suppress>

<!-- This is a low priority CVE against a deprecated method in Guava. We don't use guava directly.
-->
<suppress>
   <notes><![CDATA[
   file name: graphql-java-17.4.jar (shaded: com.google.guava:guava:30.0-jre)
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/com\.google\.guava/guava@.*$</packageUrl>
   <vulnerabilityName>CVE-2020-8908</vulnerabilityName>
</suppress>

<!-- False Positive. This CVE is against graphql-java, not graphql-java-dataloader
     See https://github.com/jeremylong/DependencyCheck/issues/5641
-->
<suppress>
   <notes><![CDATA[
   file name: java-dataloader-3.1.0.jar
   ]]></notes>
   <packageUrl regex="true">^pkg:maven/com\.graphql\-java/java\-dataloader@.*$</packageUrl>
   <cve>CVE-2023-28867</cve>
</suppress>

</suppressions>
